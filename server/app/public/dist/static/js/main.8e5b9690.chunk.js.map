{"version":3,"sources":["../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/components/Underdrop.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/components/Loading.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/components/Footer.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/components/GifBar.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/components/Results.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/App.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/serviceWorker.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/index.js","../../../../../mnt/c/Users/bignox/Desktop/nsfw_demo/src/logo.jpg"],"names":["Underdrop","_refTarget","ref","_this","hoverTarget","_refContent","hoverContent","this","drop","Drop","target","content","position","openOn","constrainToWindow","constrainToScrollParent","remove","react_default","a","createElement","id","className","react_switch_default","onColor","offColor","onChange","props","blurChange","checked","blurStatus","Component","Loading","_ref","showLoading","react_spinkit_dist","name","color","Footer","GifBar","victory_chart","height","domainPadding","x","victory_axis","style","tickLabels","fill","fontSize","padding","axisLabel","label","dependentAxis","grid","stroke","ticks","size","tickValues","tickFormat","concat","toFixed","victory_legend","y","width","orientation","gutter","border","labels","data","symbol","fillOpacity","victory_bar","animate","labelComponent","victory_tooltip","d","probability","barRatio","flat","events","eventHandlers","onMouseOver","mutation","victoryBarProps","gifControl","pause","move_to","index","active","onMouseOut","play","Results","predictions","console","log","map","prediction","key","renderPredictions","blurred","filter","WebkitFilter","clean","loadingMessage","dragMessage","camMessage","DETECTION_PERIOD","availableModels","mobilenetv2","inceptionv3","App","state","model","graphic","logo","titleMessage","message","droppedImageStyle","opacity","blurNSFW","enableWebcam","loading","fileType","hardReset","currentModelName","_onChange","value","setState","_loadModel","nsfwjs","apply","Object","toConsumableArray","then","_refWeb","webcam","detectBlurStatus","arguments","length","undefined","detectGifEvil","c","includes","checkContent","_callee","img","deemedEvil","gifMessage","_predictions","_droppedImageStyle","regenerator_default","wrap","_context","prev","next","sleep","refs","dropped","classifyGif","topk","setGifControl","onFrame","_ref3","totalFrames","percent","sent","classify","stop","setFile","file","reader","FileReader","onload","e","result","type","readAsDataURL","onDrop","accepted","rejected","window","alert","detectWebcam","_callee2","video","_context2","document","querySelectorAll","setTimeout","_renderInterface","maxWidth","innerWidth","maxHeight","innerHeight","videoConstraints","ideal","max","facingMode","react_webcam_default","audio","es","accept","bind","assertThisInitialized","src","alt","_camChange","navigator","mediaDevices","getUserMedia","ms","Promise","resolve","Underdrop_Underdrop","camChange","camStatus","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8e5b9690.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Switch from 'react-switch'\nimport Drop from 'tether-drop'\n\nexport default class Underdrop extends Component {\n  componentDidMount() {\n    // hovercard\n    this.drop = new Drop({\n      target: this.hoverTarget,\n      content: this.hoverContent,\n      position: 'bottom left',\n      openOn: 'click',\n      constrainToWindow: true,\n      constrainToScrollParent: true,\n      remove: true\n    })\n  }\n\n  _refTarget = ref => {\n    this.hoverTarget = ref\n  }\n\n  _refContent = ref => {\n    this.hoverContent = ref\n  }\n\n  render() {\n    return (\n      <div id=\"underDrop\">\n        <div ref={this._refTarget} className=\"clickTarget\">\n        </div>\n        <div className=\"switchStation\">\n          <p id=\"blurDescription\">\n            <span>不显示敏感图片</span>\n          </p>\n          <Switch\n            onColor=\"#e79f23\"\n            offColor=\"#000\"\n            onChange={this.props.blurChange}\n            checked={this.props.blurStatus}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport * as Spinner from 'react-spinkit'\n\nexport default ({ showLoading }) => {\n  if (showLoading) {\n    return (\n      <div id=\"spinContainer\">\n        <Spinner name=\"three-bounce\" color=\"#e79f23\" id=\"processCube\" />\n      </div>\n    )\n  }\n\n  return null\n}\n","import React from 'react'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\nconst options = [\n  {\n    type: 'group',\n    name: 'Mobilenet v2 Model',\n    items: [\n      {\n        value: 'mobilenetv2',\n        label: '90% Accurate - Small and fast'\n      }\n    ]\n  },\n  {\n    type: 'group',\n    name: 'Inception v3 Model',\n    items: [{ value: 'inceptionv3', label: '93% Accurate - Large and slow' }]\n  }\n]\n\nexport default props => (\n  <div>\n    {/* <div className=\"modelPicker\">\n      <p>Currently Using:</p>\n      <Dropdown\n        options={options}\n        onChange={props.onChange}\n        value={props.value}\n      />\n    </div> */}\n  </div>\n)\n","import React from 'react'\nimport {\n  VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryLegend\n} from 'victory'\n\nexport default props => (\n  <VictoryChart height={150} domainPadding={{ x: 10 }}>\n    <VictoryAxis\n      style={{\n        tickLabels: { fill: '#fff', fontSize: 8, padding: 0 },\n        axisLabel: { fill: '#fff', fontSize: 8, padding: 10 }\n      }}\n      label=\"GIF Frame Index\"\n    />\n    <VictoryAxis\n      dependentAxis\n      style={{\n        tickLabels: { fill: '#fff', fontSize: 8 },\n        grid: { stroke: 'gray' },\n        ticks: { stroke: 'gray', size: 10 }\n      }}\n      tickValues={[0, 0.25, 0.5, 0.75, 1.0]}\n      // tickFormat specifies how ticks should be displayed\n      tickFormat={x => `${(x * 100).toFixed(0)}%`}\n    />\n    <VictoryLegend\n      x={15}\n      y={125}\n      width={100}\n      orientation=\"horizontal\"\n      gutter={12}\n      style={{\n        border: { stroke: 'black' },\n        labels: { fill: 'white', fontSize: 8 }\n      }}\n      data={[\n        { name: 'Hentai', symbol: { fill: '#eef442', fillOpacity: 0.8 } },\n        { name: 'Porn', symbol: { fill: '#f00', fillOpacity: 0.8 } },\n        { name: 'Sexy', symbol: { fill: '#e79f23', fillOpacity: 0.8 } },\n        { name: 'Drawing', symbol: { fill: '#0f0', fillOpacity: 0.8 } },\n        { name: 'Neutral', symbol: { fill: '#fff', fillOpacity: 0.8 } }\n      ]}\n    />\n    <VictoryBar\n      animate={true}\n      labelComponent={<VictoryTooltip style={{ fontSize: 10 }} />}\n      labels={d => `${(d.probability * 100).toFixed(0)}% ${d.className}`}\n      style={{\n        data: {\n          fill: d => {\n            // eslint-disable-next-line\n            switch (d.className) {\n              case 'Hentai':\n                return '#eef442'\n              case 'Porn':\n                return '#f00'\n              case 'Sexy':\n                return '#e79f23'\n              case 'Drawing':\n                return '#0f0'\n              case 'Neutral':\n                return '#fff'\n            }\n          },\n          fillOpacity: 0.8\n        }\n      }}\n      barRatio={1}\n      data={props.data && props.data.flat()}\n      y=\"probability\"\n      events={[{\n        target: \"data\",\n        eventHandlers: {\n          onMouseOver: () => {\n            return [{\n              target: 'data',\n              mutation: (victoryBarProps) => {\n                props.gifControl.pause();\n                props.gifControl.move_to(victoryBarProps.index);\n                return null;\n              }\n            }, {\n              target: 'labels',\n              mutation: () => ({ active: true })\n            }];\n          },\n          onMouseOut: () => {\n            return [{\n              target: 'data',\n              mutation: () => {\n                props.gifControl.play();\n                return null;\n              }\n            }, {\n              target: 'labels',\n              mutation: () => ({ active: false })\n            }];\n          }\n        }\n      }]}\n    />\n  </VictoryChart>\n)\n","import React from 'react'\nimport GifBar from './GifBar'\n\n// Render Text Prediction OR GifBar\nconst renderPredictions = props => {\n  // only render if predictions is in singular format\n  if (props.predictions[0] && props.predictions[0].className) {\n    console.log(props.predictions)\n    return (\n      <div id=\"predictions\">\n        <ul>\n          {props.predictions.map(prediction => {\n            if (prediction.className === 'Neutral') {\n              prediction.className = '中性'\n            } else if (prediction.className === 'Drawing') {\n              prediction.className = '图画'\n            } else if (prediction.className === 'Hentai') {\n              prediction.className = '变态'\n            } else if (prediction.className === 'Sexy') {\n              prediction.className = '性感'\n            } else if (prediction.className === 'Porn') {\n              prediction.className = '色情'\n            }\n            return (\n              <li key={prediction.className}>\n                {prediction.className} - {' '}\n                {(prediction.probability * 100).toFixed(2)}%\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  } else if (props.predictions[0]) {\n    return <GifBar data={props.predictions} gifControl={props.gifControl} />\n  }\n}\n\nexport default props => (\n  <div id=\"results\">\n    {/* <p>{props.message}</p> */}\n    {renderPredictions(props)}\n  </div>\n)\n","import React, { Component } from 'react'\nimport logo from './logo.jpg'\nimport './App.css'\nimport * as nsfwjs from 'nsfwjs'\nimport Dropzone from 'react-dropzone'\nimport Webcam from 'react-webcam'\n\n// components\nimport Underdrop from './components/Underdrop'\nimport Loading from './components/Loading'\nimport Footer from './components/Footer'\nimport Results from './components/Results'\n\nconst blurred = { filter: 'blur(30px)', WebkitFilter: 'blur(30px)' }\nconst clean = {}\nconst loadingMessage = 'Loading NSFWJS Model'\nconst dragMessage = '点击下方区域添加图片进行检测'\nconst camMessage = 'Cam active'\nconst DETECTION_PERIOD = 1000\n\nconst availableModels = {\n  mobilenetv2: ['/quant_nsfw_mobilenet/'],\n  inceptionv3: ['/model/', { size: 299 }]\n}\n\nclass App extends Component {\n  state = {\n    model: null,\n    graphic: logo,\n    titleMessage: '模型加载中...',\n    message: loadingMessage,\n    predictions: [],\n    droppedImageStyle: { opacity: 0.4 },\n    blurNSFW: true,\n    enableWebcam: false,\n    loading: true,\n    fileType: null,\n    hardReset: false,\n    gifControl: null,\n    currentModelName: 'mobilenetv2'\n  }\n\n  componentDidMount() {\n    this._loadModel()\n  }\n\n  _onChange = ({ value }) => {\n    this.setState({ currentModelName: value }, this._loadModel)\n  }\n\n  _loadModel = () => {\n    this.setState({\n      titleMessage: '模型加载中...',\n      message: loadingMessage,\n      droppedImageStyle: { opacity: 0.4 },\n      graphic: logo,\n      hardReset: true,\n      predictions: [],\n      loading: true\n    })\n    // Load model from public folder\n    nsfwjs.load(...availableModels[this.state.currentModelName]).then(model => {\n      this.setState({\n        model,\n        titleMessage: this.state.enableWebcam ? camMessage : dragMessage,\n        message: 'Ready to Classify',\n        loading: false\n      })\n    })\n  }\n\n  _refWeb = webcam => {\n    this.webcam = webcam\n  }\n\n  // terrible race condition fix :'(\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  detectBlurStatus = (predictions, blurNSFW = this.state.blurNSFW) => {\n    let droppedImageStyle = clean\n    if (this.state.fileType === 'image/gif') {\n      const deemedEvil = this.detectGifEvil(predictions)\n      droppedImageStyle = deemedEvil > 0 && blurNSFW ? blurred : clean\n    } else {\n      if (blurNSFW) {\n        // eslint-disable-next-line\n        switch (predictions[0].className) {\n          case 'Hentai':\n          case 'Porn':\n          case 'Sexy':\n            droppedImageStyle = blurred\n        }\n      }\n    }\n    return droppedImageStyle\n  }\n\n  detectGifEvil = predictions =>\n    predictions\n      .filter(c => {\n        return ['Hentai', 'Porn', 'Sexy'].includes(c[0].className)\n      })\n      .flat().length\n\n  checkContent = async () => {\n    // Sleep bc it's grabbing image before it's rendered\n    // Not really a problem of this library\n    await this.sleep(100)\n    const img = this.refs.dropped\n    if (this.state.fileType === 'image/gif') {\n      this.setState({\n        message: `0% - Parsing GIF frames`,\n        predictions: [],\n        loading: true\n      })\n      const predictions = await this.state.model.classifyGif(img, {\n        topk: 1,\n        setGifControl: gifControl => {\n          this.setState({\n            gifControl\n          })\n        },\n        onFrame: ({ index, totalFrames, predictions }) => {\n          const percent = ((index / totalFrames) * 100).toFixed(0)\n          this.setState({\n            message: `${percent}% - Frame ${index} is ${\n              predictions[0].className\n            }`\n          })\n        }\n      })\n      const deemedEvil = this.detectGifEvil(predictions)\n      // If any frame is NSFW, blur it (if blur is on)\n      const droppedImageStyle = this.detectBlurStatus(predictions)\n      const gifMessage =\n        deemedEvil > 0\n          ? `Detected ${deemedEvil} NSFW frames`\n          : 'All frames look clean'\n      this.setState({\n        message: `GIF Result: ${gifMessage}`,\n        predictions,\n        droppedImageStyle,\n        loading: false\n      })\n    } else {\n      const predictions = await this.state.model.classify(img)\n      let droppedImageStyle = this.detectBlurStatus(predictions)\n      this.setState({\n        message: `Identified as ${predictions[0].className}`,\n        predictions,\n        droppedImageStyle\n      })\n    }\n  }\n\n  setFile = file => {\n    // drag and dropped\n    const reader = new FileReader()\n    reader.onload = e => {\n      this.setState(\n        { graphic: e.target.result, fileType: file.type },\n        this.checkContent\n      )\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  onDrop = (accepted, rejected) => {\n    if (rejected.length > 0) {\n      window.alert('JPG, PNG, GIF only plz')\n    } else {\n      let droppedImageStyle = this.state.blurNSFW ? blurred : clean\n      this.setState({\n        message: 'Processing...',\n        droppedImageStyle,\n        hardReset: true\n      })\n      this.setFile(accepted[0])\n    }\n  }\n\n  detectWebcam = async () => {\n    await this.sleep(100)\n\n    const video = document.querySelectorAll('.captureCam')\n    // assure video is still shown\n    if (video[0]) {\n      const predictions = await this.state.model.classify(video[0])\n      let droppedImageStyle = this.detectBlurStatus(predictions)\n      this.setState({\n        message: `Identified as ${predictions[0].className}`,\n        predictions,\n        graphic: logo,\n        droppedImageStyle\n      })\n      setTimeout(this.detectWebcam, DETECTION_PERIOD)\n    }\n  }\n\n  blurChange = checked => {\n    // Check on blurring\n    let droppedImageStyle = clean\n    if (this.state.predictions.length > 0) {\n      droppedImageStyle = this.detectBlurStatus(this.state.predictions, checked)\n    }\n\n    this.setState({\n      blurNSFW: checked,\n      droppedImageStyle\n    })\n  }\n\n  _renderInterface = () => {\n    const maxWidth = window.innerWidth\n    const maxHeight = window.innerHeight\n\n    const videoConstraints = {\n      width: { ideal: maxWidth, max: maxWidth },\n      height: { ideal: maxHeight, max: maxHeight },\n      facingMode: 'environment'\n    }\n    if (this.state.enableWebcam) {\n      return (\n        <Webcam\n          id=\"capCam\"\n          className=\"captureCam\"\n          style={this.state.droppedImageStyle}\n          width={maxWidth}\n          audio={false}\n          ref={this._refWeb}\n          videoConstraints={videoConstraints}\n        />\n      )\n    } else {\n      // SuperGif kills our React Component\n      // Only way I can seem to revive it is\n      // to force a full re-render of Drop area\n      if (this.state.hardReset) {\n        this.setState({ hardReset: false })\n        return null\n      }\n      return (\n        <Dropzone\n          id=\"dropBox\"\n          accept=\"image/jpeg, image/png, image/gif\"\n          className=\"photo-box\"\n          onDrop={this.onDrop.bind(this)}\n        >\n          <div style={this.state.droppedImageStyle}>\n            <img\n              src={this.state.graphic}\n              alt=\"drop your file here\"\n              className=\"dropped-photo\"\n              ref=\"dropped\"\n            />\n          </div>\n        </Dropzone>\n      )\n    }\n  }\n\n  _camChange = e => {\n    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n      window.alert(\"Sorry, your browser doesn't seem to support camera access.\")\n      return\n    }\n    this.detectWebcam()\n    this.setState({\n      enableWebcam: !this.state.enableWebcam,\n      message: 'Ready',\n      predictions: [],\n      droppedImageStyle: {},\n      fileType: null,\n      titleMessage: this.state.enableWebcam ? dragMessage : camMessage\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main>\n          <div className=\"main-wrap\">\n            <div id=\"overDrop\">\n              <p id=\"topMessage\">{this.state.titleMessage}</p>\n            </div>\n            {this._renderInterface()}\n            <Underdrop\n              camChange={this._camChange}\n              camStatus={this.state.enableWebcam}\n              blurChange={this.blurChange}\n              blurStatus={this.state.blurNSFW}\n            />\n          </div>\n          <Loading showLoading={this.state.loading} />\n          <Results\n            message={this.state.message}\n            gifControl={this.state.gifControl}\n            predictions={this.state.predictions}\n          />\n        </main>\n        <Footer onChange={this._onChange} value={this.state.currentModelName} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.10bad2c7.jpg\";"],"sourceRoot":""}